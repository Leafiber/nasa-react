{"version":3,"sources":["components/Home.js","components/NavBar.js","components/NasaPhoto.js","App.js","reportWebVitals.js","index.js"],"names":["Home","to","NavBar","apiKey","process","NasaPhoto","useState","photoData","setPhotoData","useEffect","a","fetch","res","json","data","console","log","fetchPhoto","media_type","src","url","alt","title","frameBorder","gesture","allow","allowFullScreen","className","date","explanation","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAGe,SAASA,IACpB,OACI,8BACI,cAAC,IAAD,CAAMC,GAAG,aAAT,mC,qCCHG,SAASC,IACpB,OACI,8BACI,6BACI,cAAC,IAAD,CAAMD,GAAG,IAAT,8BCHhB,IAAME,EAASC,2CAEA,SAASC,IAAa,IAAD,EACEC,mBAAS,MADX,mBACzBC,EADyB,KACdC,EADc,KAgBhC,OAbAC,qBAAU,WAAM,4CAGZ,8BAAAC,EAAA,sEACsBC,MAAM,+CAAD,OAC4BR,IAFvD,cACUS,EADV,gBAIuBA,EAAIC,OAJ3B,OAIUC,EAJV,OAKIN,EAAaM,GACbC,QAAQC,IAAIF,GANhB,4CAHY,0DACZG,KAUD,IAEEV,EAKD,qCACA,cAACL,EAAD,IACA,gCAC8B,UAAzBK,EAAUW,WACX,qBAAKC,IAAKZ,EAAUa,IAAKC,IAAKd,EAAUe,QAEpC,wBACIA,MAAM,cACNH,IAAKZ,EAAUa,IACfG,YAAY,IACZC,QAAQ,QACRC,MAAM,kBACNC,iBAAe,EACfC,UAAU,UAGd,gCACI,6BAAKpB,EAAUe,QACf,4BAAIf,EAAUqB,OACd,4BAAIrB,EAAUsB,uBAxBP,wB,MCLZC,MAXf,WACE,OACE,cAAC,IAAD,UACE,gCACE,cAAC,IAAD,CAAOC,UAAW/B,EAAMgC,KAAK,IAAIC,OAAK,IACtC,cAAC,IAAD,CAAOF,UAAW1B,EAAW2B,KAAK,qBCC3BE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9b05cb7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <Link to=\"/nasaphoto\">See into the stars!</Link>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <Link to=\"/\">Take Me Home</Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport {useState, useEffect } from 'react';\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst apiKey = process.env.REACT_APP_NASA_KEY;\r\n\r\nexport default function NasaPhoto() {\r\n    const [photoData, setPhotoData] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        fetchPhoto();\r\n\r\n        async function fetchPhoto() {\r\n            const res = await fetch(\r\n                `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`\r\n            );\r\n            const data = await res.json();\r\n            setPhotoData(data);\r\n            console.log(data);\r\n        } \r\n    }, []);\r\n    \r\n    if (!photoData) return <div />;\r\n\r\n    // This pulls the specified data attached to the photo.\r\n    // React.Fragment = <>\r\n    return (\r\n        <>\r\n        <NavBar />\r\n        <div>\r\n            {photoData.media_type === \"image\" ? (\r\n            <img src={photoData.url} alt={photoData.title}/>\r\n            ) : (\r\n                <iframe\r\n                    title=\"space-video\"\r\n                    src={photoData.url}\r\n                    frameBorder=\"0\"\r\n                    gesture=\"media\"\r\n                    allow=\"endrypted-media\"\r\n                    allowFullScreen\r\n                    className=\"photo\"\r\n                />\r\n            )}\r\n                <div>\r\n                    <h1>{photoData.title}</h1>\r\n                    <p>{photoData.date}</p>\r\n                    <p>{photoData.explanation}</p>\r\n                </div>\r\n        </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport NasaPhoto from \"./components/NasaPhoto\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Route component={Home} path=\"/\" exact />\n        <Route component={NasaPhoto} path=\"/nasaphoto\" />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}